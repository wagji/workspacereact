package com.lab.DiaryAppBE.Diary.Controller;

import java.util.List;
import java.util.Optional;

import org.springframework.boot.context.config.ConfigDataResourceNotFoundException;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.lab.DiaryAppBE.Diary.DTO.DiaryDTO;
import com.lab.DiaryAppBE.Diary.Entity.DiaryEntity;
import com.lab.DiaryAppBE.Diary.Repository.DiaryRepository;
import com.lab.DiaryAppBE.Diary.Service.DiaryService;

import lombok.RequiredArgsConstructor;

@CrossOrigin("*")
@RestController
@RequestMapping("/Diary")
@RequiredArgsConstructor
public class DiaryController
{
	private final DiaryRepository diaryRepository;
	private final DiaryService diaryService;
	
	//일기 전체 조회
	@GetMapping
	public List<DiaryEntity> getAllDiary()
	{
		System.out.println("getAllDiary method 호출됨");
		return diaryService.getDiaryList();
	}
	
	
	//일기 생성
	@PostMapping
	public DiaryEntity createDiary(@RequestBody DiaryDTO diaryDTO)
	{
		return diaryService.createDiary(diaryDTO);
	}
	
	
	//일기 1개 가져오기
	@GetMapping("{id}")
	public ResponseEntity<Optional<DiaryEntity>> getDiaryById(@PathVariable int id)
	{
		Optional<DiaryEntity> diary = diaryRepository.findById(id);
		
		return ResponseEntity.ok(diary);
	}
	
	
	//일기 update
	@PostMapping("{id}")
	public ResponseEntity<Optional<DiaryEntity>> updateDiary(@PathVariable int id, @RequestBody DiaryEntity diaryDetails)
	{
		Optional<DiaryEntity> updateDiary = diaryRepository.findById(id);
		updateDiary.get().setContent(diaryDetails.getContent());
		
		return ResponseEntity.ok(updateDiary);
	}
	
	
	
}
